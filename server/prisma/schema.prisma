generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 會員 
// #region 
model User {
<<<<<<< HEAD
  id        Int       @id @default(autoincrement())
  account   String    @unique
  password  String
  name      String
  phone     String
  // String->DateTime
  birthday  DateTime?
  email     String
  // 更改為與資料庫相同
  is_coach  Int
  avatar    String?
  bio       String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  deleted_at DateTime? @map("deleted_at")

  favorites         UserFavorite[]
  Group             Group[]
  GroupMember       GroupMember[]
  GroupComment      GroupComment[]
  ChatMessage       ChatMessage[]
  GameScore         GameScore[]
  UserCoupon        UserCoupon[]
  CourseVariantUser CourseVariantUser[]

  @@map("user")
}

model UserFavorite {
  id        Int @id @default(autoincrement())
  userId    Int @map("user_id")
  productId Int @map("product_id")

  // 正式關聯
  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@index([userId], map: "idx_user_id")
  @@index([productId], map: "idx_product_id")
  @@map("user_favorite")
}

// usercoupon
model UserCoupon {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  couponId  Int       @map("coupon_id")
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  usedAt    DateTime? @map("used_at")

  coupon Coupon @relation(fields: [couponId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId, couponId], name: "uniq_user_coupon")
  @@map("user_coupon")
=======
  id           Int            @id @default(autoincrement())
  account      String         @unique
  password     String
  name         String
  phone        String
  birthday     String
  email        String
  is_coach     String
  avatar       String
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  deleteAt     DateTime?      @map("delete_at")
  Group        Group[]
  GroupMember  GroupMember[]
  GroupComment GroupComment[]
  ChatMessage  ChatMessage[]
  GameScore    GameScore[]
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
}

// #endregion

// 商品
// #region 
model Product {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(255)
  category_id      Int?
  brand_id         Int?
<<<<<<< HEAD
  min_price        Int?
=======
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  introduction     String?          @db.Text
  spec             String?          @db.Text
  created_at       DateTime         @default(now()) @db.DateTime(0)
  publish_at       DateTime?        @db.DateTime(0)
  unpublish_at     DateTime?        @db.DateTime(0)
<<<<<<< HEAD
  deleted_at       DateTime?        @db.DateTime(0)
=======
  delete_at        DateTime?        @db.DateTime(0)
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  product_brand    ProductBrand?    @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_brand")
  product_category ProductCategory? @relation(fields: [category_id], references: [id], onUpdate: Restrict, map: "product_ibfk_1")
  product_image    ProductImage[]
  product_sku      ProductSku[]

<<<<<<< HEAD
  favorites UserFavorite[]

=======
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  @@index([category_id], map: "category_id")
  @@index([brand_id], map: "fk_product_brand")
  @@map("product")
}

model ProductBrand {
  id         Int       @id @default(autoincrement())
  name       String    @unique(map: "name") @db.VarChar(255)
  sort_order Int?      @default(0)
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  product    Product[]

  @@map("product_brand")
}

model ProductCategory {
  id                                                                       Int                   @id @default(autoincrement())
  name                                                                     String                @db.VarChar(100)
  parent_id                                                                Int?
  gender                                                                   Int                   @default(0) @db.TinyInt
  created_at                                                               DateTime              @default(now()) @db.Timestamp(0)
  updated_at                                                               DateTime              @default(now()) @db.DateTime(0)
  deleted_at                                                               DateTime?             @db.DateTime(0)
  product                                                                  Product[]
  product_category                                                         ProductCategory?      @relation("product_categoryToproduct_category", fields: [parent_id], references: [id], onUpdate: Restrict, map: "product_category_ibfk_1")
  other_product_category                                                   ProductCategory[]     @relation("product_categoryToproduct_category")
  product_category_path_product_category_path_ancestorToproduct_category   ProductCategoryPath[] @relation("product_category_path_ancestorToproduct_category")
  product_category_path_product_category_path_descendantToproduct_category ProductCategoryPath[] @relation("product_category_path_descendantToproduct_category")

  @@index([parent_id], map: "parent_id")
  @@map("product_category")
}

model ProductCategoryPath {
  ancestor                                                            Int
  descendant                                                          Int
  depth                                                               Int
  product_category_product_category_path_ancestorToproduct_category   ProductCategory @relation("product_category_path_ancestorToproduct_category", fields: [ancestor], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_ancestor")
  product_category_product_category_path_descendantToproduct_category ProductCategory @relation("product_category_path_descendantToproduct_category", fields: [descendant], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_descendant")

  @@id([ancestor, descendant])
  @@index([descendant], map: "idx_descendant")
  @@map("product_category_path")
}

model ProductImage {
  id         Int       @id @default(autoincrement())
  product_id Int
  url        String    @db.VarChar(255)
  sort_order Int?      @default(0)
<<<<<<< HEAD
  created_at DateTime  @default(now()) @db.DateTime(0)
=======
  created_at DateTime  @default(now()) @db.Timestamp(0)
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  updated_at DateTime  @default(now()) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  product    Product   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_image_ibfk_1")

  @@index([product_id], map: "product_id")
  @@map("product_image")
}

model ProductRating {
  id          Int       @id @default(autoincrement())
  user_id     Int
  order_id    Int       @unique(map: "ux_order_rating")
  product_id  Int
  rating      Decimal   @db.Decimal(2, 1)
  review_text String?   @db.Text
  created_at  DateTime  @default(now()) @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)

  @@map("product_rating")
}

model ProductSize {
  id          Int          @id @default(autoincrement())
  name        String       @unique(map: "name") @db.VarChar(10)
  sort_order  Int          @default(0)
  product_sku ProductSku[]

  @@map("product_size")
}

model ProductSku {
  id           Int           @id @default(autoincrement())
  product_id   Int
  size_id      Int?
  sku_code     String        @unique(map: "uq_sku_code") @db.VarChar(100)
  stock        Int?          @default(0)
  price        Int
  created_at   DateTime?     @default(now()) @db.DateTime(0)
  updated_at   DateTime?     @default(now()) @db.DateTime(0)
  deleted_at   DateTime?     @db.DateTime(0)
  product      Product       @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_sku_ibfk_1")
  product_size ProductSize?  @relation(fields: [size_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_sku_ibfk_2")
  CartProduct  CartProduct[]

  @@unique([product_id, size_id], map: "uq_sku_unique")
  @@index([size_id], map: "size_id")
  @@map("product_sku")
}

// #endregion

// 揪團
// #region 
// 揪團
/// 活動類型
enum ActivityType {
  SKI  @map("滑雪")
  MEAL @map("聚餐")
}

/// 滑雪難易度
enum SkiDifficulty {
  BEGINNER @map("初級")
  INTER    @map("中級")
  ADVANCE  @map("進階")
}

/// 訊息類型（文字／照片）
enum MessageType {
  TEXT  @map("text")
  IMAGE @map("image")
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  address   String   @db.VarChar(255)
  city      String   @db.VarChar(100)
  country   String   @db.VarChar(100)
  latitude  Decimal  @db.Decimal(20, 17)
  longitude Decimal  @db.Decimal(20, 17)
  createdAt DateTime @default(now()) @map("created_at")

  // relations
<<<<<<< HEAD
  groups        Group[]
  CourseVariant CourseVariant[]
=======
  groups Group[]
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("location")
}

model Group {
<<<<<<< HEAD
  id          Int @id @default(autoincrement())
  organizerId Int @map("organizer_id")

  user       User      @relation(fields: [organizerId], references: [id])
=======
  id         Int       @id @default(autoincrement())
  userId     Int       @map("user_id")
  user       User      @relation(fields: [userId], references: [id])
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  locationId Int?      @map("location_id")
  location   Location? @relation(fields: [locationId], references: [id])

  customLocation String?        @map("custom_location")
  title          String         @db.VarChar(100)
  type           ActivityType
  difficulty     SkiDifficulty?
  startDate      DateTime       @map("start_date")
  endDate        DateTime       @map("end_date")
  minPeople      Int            @map("min_people")
  maxPeople      Int            @map("max_people")
  price          Int
  description    String?        @db.Text
  allowNewbie    Boolean        @default(false) @map("allow_newbie")
  createdAt      DateTime       @default(now()) @map("created_at")
  endAt          DateTime?      @map("end_at")
  deletedAt      DateTime?      @map("deleted_at")

  // relations
  members  GroupMember[]
  images   GroupImage[]
  comments GroupComment[]
  chatRoom ChatRoom? // inverse side of ChatRoom.group

  @@map("group")
}

model GroupMember {
  id       Int       @id @default(autoincrement())
  groupId  Int       @map("group_id")
  userId   Int       @map("user_id")
  joinedAt DateTime  @default(now()) @map("joined_at")
  paidAt   DateTime? @map("paid_at")

<<<<<<< HEAD
  group     Group       @relation(fields: [groupId], references: [id])
  user      User        @relation(fields: [userId], references: [id])
  CartGroup CartGroup[]
=======
  group Group @relation(fields: [groupId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@unique([groupId, userId])
  @@map("group_member")
}

model GroupImage {
  id        Int    @id @default(autoincrement())
  groupId   Int    @map("group_id")
  imageUrl  String @map("image_url")
  sortOrder Int    @default(0) @map("sort_order")

  group Group @relation(fields: [groupId], references: [id])

  @@map("group_image")
}

model GroupComment {
  id        Int      @id @default(autoincrement())
  groupId   Int      @map("group_id")
  userId    Int      @map("user_id")
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  replyId   Int?     @map("reply_id")

  group Group @relation(fields: [groupId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@map("group_comment")
}

model ChatRoom {
  groupId       Int       @id @map("group_id")
  createdAt     DateTime  @default(now()) @map("created_at")
  lastMessageAt DateTime? @map("last_message_at")

  group    Group         @relation(fields: [groupId], references: [id])
  messages ChatMessage[]

  @@map("chatroom")
}

model ChatMessage {
  id          Int         @id @default(autoincrement())
  groupId     Int         @map("group_id")
  userId      Int         @map("user_id")
  content     String
  messageType MessageType @default(TEXT) @map("message_type")
  sentAt      DateTime    @default(now()) @map("sent_at")
  isRead      Boolean?    @map("is_read")
  room        ChatRoom    @relation(fields: [groupId], references: [groupId])
  user        User        @relation(fields: [userId], references: [id])

  @@map("chat_message")
}

// #endregion

// 師資與課程
// #region 
model Coach {
<<<<<<< HEAD
  id             Int              @id @default(autoincrement())
  name           String
  email          String
  bio            String
  experience     String
  profilephoto   String
  createdat      DateTime         @default(now()) @map("created_at")
  valid          Int
  LanguageCoach  LanguageCoach[]
  LicenseCoach   LicenseCoach[]
  BoardtypeCoach BoardtypeCoach[]
  CourseVariant  CourseVariant[]
=======
  id            Int             @id @default(autoincrement())
  name          String
  email         String
  bio           String
  experience    String
  profilephoto  String
  createdat     DateTime        @default(now()) @map("created_at")
  valid         Int
  LanguageCoach LanguageCoach[]
  LicenseCoach  LicenseCoach[]
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("coach")
}

model Language {
  id            Int             @id @default(autoincrement())
  name          String
  LanguageCoach LanguageCoach[]

  @@map("language")
}

model LanguageCoach {
  id          Int @id @default(autoincrement())
  language_id Int
  coach_id    Int

  language Language @relation(fields: [language_id], references: [id])
  coach    Coach    @relation(fields: [coach_id], references: [id])

  @@map("language_coach")
}

model License {
  id           Int            @id @default(autoincrement())
  name         String
  LicenseCoach LicenseCoach[]

  @@map("license")
}

model LicenseCoach {
  id         Int @id @default(autoincrement())
  license_id Int
  coach_id   Int

  license License @relation(fields: [license_id], references: [id])
  coach   Coach   @relation(fields: [coach_id], references: [id])

  @@map("license_coach")
}

model Course {
<<<<<<< HEAD
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  content       String
  created_at    DateTime        @default(now()) @map("created_at")
  updated_at    DateTime        @updatedAt @map("updated_at")
  deleted_at    DateTime?       @map("deleted_at")
  start_at      DateTime        @updatedAt @map("start_at")
  end_at        DateTime        @map("end_at")
  CourseImg     CourseImg[]
  CourseVariant CourseVariant[]
  CourseTag     CourseTag[]
=======
  id          Int         @id @default(autoincrement())
  name        String
  description String
  created_at  DateTime    @default(now()) @map("created_at")
  updated_at  DateTime    @updatedAt @map("updated_at")
  deleted_at  DateTime?   @map("deleted_at")
  start_at    DateTime    @updatedAt @map("start_at")
  end_at      DateTime    @map("end_at")
  CourseImg   CourseImg[]
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("course")
}

model CourseImg {
<<<<<<< HEAD
  id        Int    @id @default(autoincrement())
  course_id Int
  img       String

  course        Course          @relation(fields: [course_id], references: [id])
  CourseVariant CourseVariant[]
=======
  id        Int @id @default(autoincrement())
  course_id Int
  img String

  course Course @relation(fields: [course_id], references: [id])
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("course_img")
}

model CourseVariant {
<<<<<<< HEAD
  id            Int      @id @default(autoincrement())
=======
  id Int @id @default(autoincrement())
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  course_id     Int
  difficulty    String
  price         Int
  duration      Int
  max_people    Int
  location_id   Int
  coach_id      Int
  course_img_id Int
<<<<<<< HEAD
  created_at    DateTime @default(now()) @map("created_at")
  update_at     DateTime @updatedAt @map("update_at")

  start_at   DateTime     @updatedAt @map("start_at")
  deleted_at DateTime?    @map("deleted_at")
  CartCourse CartCourse[]

  course            Course              @relation(fields: [course_id], references: [id])
  coach             Coach               @relation(fields: [coach_id], references: [id])
  courseImg         CourseImg           @relation(fields: [course_img_id], references: [id])
  location          Location            @relation(fields: [location_id], references: [id])
  CourseVariantUser CourseVariantUser[]
=======
  start_at      DateTime     @updatedAt @map("start_at")
  deleted_at    DateTime?    @map("deleted_at")
  CartCourse    CartCourse[]
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("course_variant")
}

model Tag {
<<<<<<< HEAD
  id        Int         @id @default(autoincrement())
  name      String
  CourseTag CourseTag[]
=======
  id Int @id @default(autoincrement())
  name String
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("tag")
}

model CourseTag {
<<<<<<< HEAD
  id        Int    @id @default(autoincrement())
  course_id Int
  tag_id    Int
  course    Course @relation(fields: [course_id], references: [id])
  tag       Tag    @relation(fields: [tag_id], references: [id])

  @@map("course_tag")
}

model Boardtype {
  id             Int              @id @default(autoincrement())
  name           String
  BoardtypeCoach BoardtypeCoach[]

  @@map("boardtype")
}

model BoardtypeCoach {
  id           Int @id @default(autoincrement())
  boardtype_id Int
  coach_id     Int

  boardtype Boardtype @relation(fields: [boardtype_id], references: [id])
  coach     Coach     @relation(fields: [coach_id], references: [id])

  @@map("boardtype_coach")
}

model CourseVariantUser {
  id                Int       @id @default(autoincrement())
  course_variant_id Int
  user_id           Int
  name              String
  phone             String
  email             String
  birthday          DateTime?
  joined_at         DateTime  @default(now())
  paid_at           DateTime?

  course_variant CourseVariant @relation(fields: [course_variant_id], references: [id])
  user           User          @relation(fields: [user_id], references: [id])

  @@map("course_variant_user")
}

=======
  id Int @id @default(autoincrement())
  course_id Int
  tag_id Int

  @@map("course_tag")
}
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
// #endregion

// 優惠券
// #region 
// coupon
model Coupon {
  id             Int       @id @default(autoincrement())
  name           String
  typeId         Int       @map("type_id")
  couponTargetId Int       @map("coupon_target_id")
  startAt        DateTime  @map("start_at")
  endAt          DateTime  @map("end_at")
  usageLimit     Int       @map("usage_limit")
  minPurchase    Int       @map("min_purchase")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  code           String

  couponType   CouponType   @relation(fields: [typeId], references: [id])
  couponTarget CouponTarget @relation(fields: [couponTargetId], references: [id])
<<<<<<< HEAD
  UserCoupon   UserCoupon[]
  Game         Game[]
=======
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("coupon")
}

model CouponType {
  id     Int    @id @default(autoincrement())
  amount Int
  type   String

  Coupon Coupon[]

  @@map("coupon_type")
}

model CouponTarget {
  id     Int    @id @default(autoincrement())
  target String

  Coupon Coupon[]

  @@map("coupon_target")
}

// game
model Game {
  id               Int         @id @default(autoincrement())
  scoreRequirement Int         @map("score_requirement")
<<<<<<< HEAD
  rewardCouponId   Int         @map("reward_coupon_id")
  GameScore        GameScore[]

  rewardCoupon Coupon @relation(fields: [rewardCouponId], references: [id])

=======
  GameScore        GameScore[]

>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  @@map("game")
}

model GameScore {
  id       Int      @id @default(autoincrement())
  userId   Int      @map("user_id")
  score    Int
  playedAt DateTime @default(now()) @map("played_at")
  gameId   Int      @map("game_id")

  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("game_score")
}

// #endregion

// 購物車
// #region 
// cart
model Cart {
  id          Int           @id @default(autoincrement())
<<<<<<< HEAD
  userId      Int           @unique @map("user_id")
=======
  userId      Int           @map("user_id")
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c
  CartProduct CartProduct[]
  CartCourse  CartCourse[]
  CartGroup   CartGroup[]

  @@map("cart")
}

model CartProduct {
  id           Int @id @default(autoincrement())
  cartId       Int @map("cart_id")
  productSkuId Int @map("product_sku_id")
  quantity     Int

  cart       Cart       @relation(fields: [cartId], references: [id])
  productSku ProductSku @relation(fields: [productSkuId], references: [id])

  @@map("cart_product")
}

model CartCourse {
  id              Int @id @default(autoincrement())
  cartId          Int @map("cart_id")
  courseVariantId Int @map("course_variant_id")

  cart          Cart          @relation(fields: [cartId], references: [id])
  courseVariant CourseVariant @relation(fields: [courseVariantId], references: [id])

  @@map("cart_course")
}

model CartGroup {
<<<<<<< HEAD
  id            Int @id @default(autoincrement())
  cartId        Int @map("cart_id")
  groupMemberId Int @map("group_member_id")

  cart        Cart        @relation(fields: [cartId], references: [id])
  groupMember GroupMember @relation(fields: [groupMemberId], references: [id])
=======
  id      Int @id @default(autoincrement())
  cartId  Int @map("cart_id")
  groupId Int @map("group_id")

  cart Cart @relation(fields: [cartId], references: [id])
>>>>>>> 318e321f242dec24a9b5abd3cc1a5a6b0377536c

  @@map("cart_group")
}

// order
model Order {
  id           Int            @id @default(autoincrement())
  userId       Int            @map("user_id")
  couponId     Int?           @map("coupon_id")
  amount       Int
  payment      String
  address      String
  phone        String
  name         String
  orderProduct OrderProduct[]
  orderCourse  OrderCourse[]
  orderGroup   OrderGroup[]

  @@map("order")
}

model OrderProduct {
  id      Int @id @default(autoincrement())
  orderId Int @map("order_id")

  productSkuId Int @map("product_sku_id")
  quantity     Int

  order Order @relation(fields: [orderId], references: [id])

  @@map("order_product")
}

model OrderCourse {
  id       Int @id @default(autoincrement())
  orderId  Int @map("order_id")
  courseId Int @map("course_id")

  order Order @relation(fields: [orderId], references: [id])

  @@map("order_course")
}

model OrderGroup {
  id      Int @id @default(autoincrement())
  orderId Int @map("order_id")
  groupId Int @map("group_id")

  order Order @relation(fields: [orderId], references: [id])

  @@map("order_group")
}

// #endregion

// -----------底下為範例--------------------------------------------------

// 以下為資料表定義
// https://www.prisma.io/docs/concepts/components/prisma-schema/data-model
// 部落格CRUD範例
// model Blog {
//   id        Int      @id @default(autoincrement())
//   // DateTime 會轉換成資料庫的 timestamp，time zone 會自動轉換成 UTC
//   // 格式: 2021-01-01T00:00:00.000Z
//   createdAt DateTime @default(now()) @map("created_at")
//   // 這個欄位會在每次更新時"自動"更新時間，不需要手動更新
//   // DateTime 會轉換成資料庫的 timestamp，time zone 會自動轉換成 UTC
//   updatedAt DateTime @updatedAt @map("updated_at")
//   title     String   @db.VarChar(255)
//   content   String?  @db.Text
//   published Boolean  @default(false)

//   // 關聯: User:Blog = 1:n 
//   // author    User     @relation(fields: [authorId], references: [id])
//   // authorId  Int
//   // 關聯: Blog:BlogComment = 1:n 
//   comments BlogComment[]

//   @@map("blog")
// }

// model BlogComment {
//   id        Int      @id @default(autoincrement())
//   content   String   @db.Text
//   // DateTime 會轉換成資料庫的 timestamp，time zone 會自動轉換成 UTC
//   // 格式: 2021-01-01T00:00:00.000Z
//   createdAt DateTime @default(now()) @map("created_at")
//   // 這個欄位會在每次更新時"自動"更新時間，不需要手動更新
//   // DateTime 會轉換成資料庫的 timestamp，time zone 會自動轉換成 UTC
//   updatedAt DateTime @updatedAt @map("updated_at")
//   author    String   @db.VarChar(255)
//   // 關聯: Blog:BlogComment = 1:n 
//   // Blog      Blog?    @relation(fields: [blogId], references: [id])
//   blogId    Int?     @map("blog_id")
//   Blog      Blog?    @relation(fields: [blogId], references: [id])

//   // 強制定義資料表名稱
//   @@map("blog_comment")
// }

// model Brand {
//   id       Int       @id @default(autoincrement())
//   name     String    @unique
//   img      String?
//   info     String    @db.Text
//   // 關聯: Brand:Product = 1:n 
//   products Product[]
// }

// model Category {
//   id       Int       @id @default(autoincrement())
//   name     String    @unique
//   parentId Int?      @map("parent_id")
//   // 關聯: Category:Product = 1:n 
//   products Product[]
// }

// model Favorite {
//   // 關聯: User:Favorite = 1:n 
//   user      User    @relation(fields: [userId], references: [id])
//   userId    Int     @map("user_id")
//   // 關聯: Product:Favorite = 1:n 
//   product   Product @relation(fields: [productId], references: [id])
//   productId Int     @map("product_id")

//   // 複合主鍵
//   @@id([userId, productId])
// }

// model Otp {
//   id        Int      @id @default(autoincrement())
//   email     String
//   token     String
//   hash      String?
//   createdAt DateTime @default(now()) @map("created_at")
//   expiredAt DateTime @map("expired_at")
// }

// model Profile {
//   id       Int       @id @default(autoincrement())
//   name     String?
//   bio      String?   @db.Text
//   avatar   String?
//   sex      String?
//   // 日期格式: 2021-01-01
//   birth    DateTime? @db.Date
//   phone    String?
//   postcode String?
//   address  String?
//   // 1:1 關聯
//   user     User      @relation(fields: [userId], references: [id])
//   userId   Int       @unique @map("user_id")
// }

// model Product {
//   id         Int        @id @default(autoincrement())
//   name       String
//   sn         String     @unique
//   photos     String?    @db.Text
//   stock      Int        @default(0)
//   price      Int        @default(0)
//   info       String     @db.Text
//   // 關聯: Brand:Product = 1:n 
//   brand      Brand      @relation(fields: [brandId], references: [id])
//   brandId    Int        @map("brand_id")
//   // 關聯: Category:Product = 1:n 
//   category   Category   @relation(fields: [categoryId], references: [id])
//   categoryId Int        @map("category_id")
//   // 關聯: User:Product = n:m 透過 Favorite
//   favorites  Favorite[]
// }

// model User {
//   id              Int        @id @default(autoincrement())
//   username        String     @unique
//   password        String
//   email           String     @unique
//   // 關聯 User:Profile = 1:1 
//   profile         Profile?
//   emailValidated  Boolean    @default(false) @map("email_validated")
//   googleUid       String?    @unique @map("google_uid")
//   lineUid         String?    @unique @map("line_uid")
//   lineAccessToken String?    @map("line_access_token") @db.Text
//   // 關聯: User:Product = n:m 透過 Favorite
//   favorites       Favorite[]
// } 
