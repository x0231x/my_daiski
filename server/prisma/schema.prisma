generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["daiski_db"]
}

model product {
  id               BigInt            @id(map: "idx_16391_primary") @default(autoincrement())
  name             String            @db.VarChar(255)
  category_id      BigInt?
  brand_id         BigInt?
  introduction     String?
  spec             String?
  created_at       DateTime          @default(now()) @db.Timestamptz(6)
  publish_at       DateTime?         @db.Timestamptz(6)
  unpublish_at     DateTime?         @db.Timestamptz(6)
  delete_at        DateTime?         @db.Timestamptz(6)
  product_brand    product_brand?    @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_brand")
  product_category product_category? @relation(fields: [category_id], references: [id], onUpdate: Restrict, map: "product_ibfk_1")
  product_image    product_image[]
  product_sku      product_sku[]

  @@index([category_id], map: "idx_16391_category_id")
  @@index([brand_id], map: "idx_16391_fk_product_brand")
  @@schema("daiski_db")
}

model product_brand {
  id         BigInt    @id(map: "idx_16399_primary") @default(autoincrement())
  name       String    @unique(map: "idx_16399_name") @db.VarChar(255)
  sort_order BigInt?   @default(0)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  product    product[]

  @@schema("daiski_db")
}

model product_category {
  id                                                                       BigInt                  @id(map: "idx_16407_primary") @default(autoincrement())
  name                                                                     String                  @db.VarChar(100)
  parentid                                                                 BigInt?
  gender                                                                   Int                     @default(0) @db.SmallInt
  created_at                                                               DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                                                               DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at                                                               DateTime?               @db.Timestamptz(6)
  product                                                                  product[]
  product_category                                                         product_category?       @relation("product_categoryToproduct_category", fields: [parentid], references: [id], onUpdate: Restrict, map: "product_category_ibfk_1")
  other_product_category                                                   product_category[]      @relation("product_categoryToproduct_category")
  product_category_path_product_category_path_ancestorToproduct_category   product_category_path[] @relation("product_category_path_ancestorToproduct_category")
  product_category_path_product_category_path_descendantToproduct_category product_category_path[] @relation("product_category_path_descendantToproduct_category")

  @@index([parentid], map: "idx_16407_parent_id")
  @@schema("daiski_db")
}

model product_category_path {
  ancestor                                                            BigInt
  descendant                                                          BigInt
  depth                                                               BigInt
  product_category_product_category_path_ancestorToproduct_category   product_category @relation("product_category_path_ancestorToproduct_category", fields: [ancestor], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_ancestor")
  product_category_product_category_path_descendantToproduct_category product_category @relation("product_category_path_descendantToproduct_category", fields: [descendant], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_descendant")

  @@id([ancestor, descendant], map: "idx_16414_primary")
  @@index([descendant], map: "idx_16414_idx_descendant")
  @@schema("daiski_db")
}

model product_image {
  id         BigInt   @id(map: "idx_16418_primary") @default(autoincrement())
  product_id BigInt
  url        String   @db.VarChar(255)
  sort_order BigInt?  @default(0)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  valid      Int      @default(1) @db.SmallInt
  product    product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_image_ibfk_1")

  @@index([product_id], map: "idx_16418_product_id")
  @@schema("daiski_db")
}

model product_rating {
  id          BigInt    @id(map: "idx_16426_primary") @default(autoincrement())
  user_id     BigInt
  order_id    BigInt    @unique(map: "idx_16426_ux_order_rating")
  product_id  BigInt
  rating      Decimal   @db.Decimal(2, 1)
  review_text String?
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)

  @@schema("daiski_db")
}

model product_size {
  id          BigInt        @id(map: "idx_16434_primary") @default(autoincrement())
  name        String        @unique(map: "idx_16434_name") @db.VarChar(10)
  sort_order  BigInt        @default(0)
  product_sku product_sku[]

  @@schema("daiski_db")
}

model product_sku {
  id           BigInt        @id(map: "idx_16440_primary") @default(autoincrement())
  product_id   BigInt
  size_id      BigInt?
  sku_code     String        @unique(map: "idx_16440_uq_sku_code") @db.VarChar(100)
  stock        BigInt?       @default(0)
  price        BigInt
  created_at   DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @db.Timestamptz(6)
  deleted_at   DateTime?     @db.Timestamptz(6)
  product      product       @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_sku_ibfk_1")
  product_size product_size? @relation(fields: [size_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_sku_ibfk_2")

  @@unique([product_id, size_id], map: "idx_16440_uq_sku_unique")
  @@index([size_id], map: "idx_16440_size_id")
  @@schema("daiski_db")
}
